name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        type: string
      nextVersion:
        description: 'Next version after release (-SNAPSHOT will be added automatically)'
        required: true
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    env:
      RELEASE_VERSION: ${{ github.event.inputs.version }}
      NEXT_DEV_VERSION: ${{ github.event.inputs.nextVersion }}-SNAPSHOT

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate input versions
        run: |
          if [ "$RELEASE_VERSION" = "$NEXT_DEV_VERSION" ]; then
            echo "❌ Error: Release version and next version cannot be the same!"
            echo "Release version: $RELEASE_VERSION"
            echo "Next version: $NEXT_DEV_VERSION"
            exit 1
          fi
          echo "✅ Version validation passed"
          echo "Release version: $RELEASE_VERSION"
          echo "Next version: $NEXT_DEV_VERSION"

      - name: Update Maven Version
        run: ./mvnw --batch-mode versions:set -DnewVersion="$RELEASE_VERSION"

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: ./mvnw -Ppublication

      - name: Run JReleaser
        uses: jreleaser/release-action@v2
        with:
          arguments: 'full-release --git-root-search'
          version: 1.19.0
        env:
          JRELEASER_PROJECT_VERSION: ${{ env.RELEASE_VERSION }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.MAVEN_GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.MAVEN_GPG_SECRET_KEY }}
          JRELEASER_MAVENCENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          JRELEASER_MAVENCENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}

      - name: Upload JReleaser trace log on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: jreleaser-trace-log
          path: out/jreleaser/trace.log
          if-no-files-found: warn

      - name: Update versions after release
        run: ./scripts/update-versions.sh "${{ env.RELEASE_VERSION }}" "${{ env.NEXT_DEV_VERSION }}"

      - name: Commit & Push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "prepare for next development version ${{ env.NEXT_DEV_VERSION }}"
          git push
